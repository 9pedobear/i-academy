# Generated by Django 4.0.3 on 2022-05-09 08:07

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, verbose_name='Аты-жөнүңүз')),
                ('phone', models.CharField(blank=True, max_length=150, verbose_name='Телефон номериңиз *')),
                ('email_adress', models.EmailField(blank=True, max_length=254, verbose_name='E-mail почтаңыз *')),
                ('comment', models.TextField(blank=True, verbose_name='Сиздин өтүнүчүңүз')),
            ],
        ),
        migrations.CreateModel(
            name='Buissines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_name', models.CharField(max_length=100, verbose_name='Название курса')),
                ('description_title_name', models.TextField(verbose_name='описание курса')),
                ('format_trainings', models.CharField(max_length=250, verbose_name='формат тренинга')),
                ('count_lesson', models.CharField(blank=True, max_length=100, verbose_name='сколько материала')),
                ('time', models.CharField(blank=True, max_length=20, verbose_name='длительность курса')),
                ('video', models.FileField(blank=True, upload_to='uploads/%Y/%m/%d/', verbose_name='видео')),
                ('about_course', models.TextField(blank=True, verbose_name='о курсе описание курса')),
                ('about_course2', models.TextField(blank=True, verbose_name='о курсе описание курса2')),
                ('about_course3', models.TextField(blank=True, verbose_name='о курсе описание курса3')),
                ('for_who', models.TextField(blank=True, verbose_name='для кого это')),
                ('for_who2', models.TextField(blank=True, verbose_name='для кого это2')),
                ('for_who3', models.TextField(blank=True, verbose_name='для кого это3')),
                ('will_know', models.TextField(blank=True, verbose_name='Вы узнаете')),
                ('will_know2', models.TextField(blank=True, verbose_name='Вы узнаете')),
                ('will_know3', models.TextField(blank=True, verbose_name='Вы узнаете')),
                ('result_you', models.TextField(blank=True, verbose_name='в результате вы')),
                ('result_you2', models.TextField(blank=True, verbose_name='в результате вы2')),
                ('result_you3', models.TextField(blank=True, verbose_name='в результате вы3')),
                ('result_you4', models.TextField(blank=True, verbose_name='в результате вы4')),
                ('result_you5', models.TextField(blank=True, verbose_name='в результате вы5')),
                ('block_question', models.CharField(max_length=250, verbose_name='первый блок вопрос')),
                ('data_block1', models.CharField(blank=True, max_length=100, verbose_name='время первого блока')),
                ('description_block1', models.TextField(verbose_name='ответ первого блока1')),
                ('description_block2', models.TextField(verbose_name='ответ первого блока2')),
                ('description_block3', models.TextField(verbose_name='ответ первого блока3')),
                ('description_block4', models.TextField(verbose_name='ответ первого блока4')),
                ('description_block5', models.TextField(verbose_name='ответ первого блока5')),
                ('block_question2', models.CharField(max_length=250, verbose_name='второй блок вопрос')),
                ('data_block2', models.CharField(blank=True, max_length=100, verbose_name='время второго блока')),
                ('description_block21', models.TextField(verbose_name='ответ второго блока21')),
                ('description_block22', models.TextField(verbose_name='ответ второго блока22')),
                ('description_block23', models.TextField(verbose_name='ответ второго блока23')),
                ('description_block24', models.TextField(verbose_name='ответ второго блока24')),
                ('description_block25', models.TextField(verbose_name='ответ второго блока25')),
                ('block_question3', models.CharField(max_length=250, verbose_name='третий блок вопрос')),
                ('data_block3', models.CharField(blank=True, max_length=100, verbose_name='время третьего блока')),
                ('description_block31', models.TextField(verbose_name='ответ третьего блока')),
                ('description_block32', models.TextField(verbose_name='ответ третьего блока2')),
                ('description_block33', models.TextField(verbose_name='ответ третьего блока3')),
                ('description_block34', models.TextField(verbose_name='ответ третьего блока4')),
                ('description_block35', models.TextField(verbose_name='ответ третьего блока5')),
                ('what_give_course1', models.TextField(verbose_name='на курсе вы научитесь ?')),
                ('what_give_course2', models.TextField(verbose_name='на курсе вы научитесь2 ?')),
                ('what_give_course3', models.TextField(verbose_name='на курсе вы научитесь3 ?')),
                ('what_give_course4', models.TextField(verbose_name='на курсе вы научитесь4 ?')),
                ('what_give_course5', models.TextField(verbose_name='на курсе вы научитесь5 ?')),
                ('what_give_course6', models.TextField(verbose_name='на курсе вы научитесь6 ?')),
                ('what_give_course7', models.TextField(verbose_name='на курсе вы научитесь7 ?')),
                ('photo', models.ImageField(upload_to='image/%Y/%m/%d', verbose_name='Изображение')),
                ('name_mentor', models.CharField(max_length=100, verbose_name='имя тренера')),
                ('description_mentor', models.CharField(blank=True, max_length=250, verbose_name='опишите тренера, кейсы')),
                ('description_mentor21', models.TextField(verbose_name='биография тренера')),
                ('description_mentor22', models.TextField(verbose_name='биография тренера')),
                ('description_mentor23', models.TextField(verbose_name='биография тренера')),
                ('description_mentor24', models.TextField(verbose_name='биография тренера')),
            ],
        ),
        migrations.CreateModel(
            name='Category_makala',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=250)),
                ('type', models.CharField(blank=True, max_length=50)),
                ('date', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Category_trainings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='тип тренинга')),
                ('name', models.CharField(max_length=100, verbose_name='название тренинга')),
                ('description', models.TextField(verbose_name='описание тренинга')),
                ('photo', models.ImageField(upload_to='image/%Y/%m/%d', verbose_name='Изображение')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Комментарий калтырып кетиңиз')),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('about_mentor', models.CharField(blank=True, max_length=250, verbose_name='описание тренера кейсы')),
                ('description', models.TextField(verbose_name='описать о курсе')),
                ('photo', models.ImageField(upload_to='image/%Y/%m/%d', verbose_name='Изображение')),
            ],
        ),
        migrations.CreateModel(
            name='Makala_detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('date', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=250)),
                ('video', models.FileField(blank=True, upload_to='uploads/%Y/%m/%d/')),
                ('title2', models.CharField(max_length=100)),
                ('description2', models.CharField(max_length=250)),
                ('description3', models.TextField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.category_makala')),
            ],
        ),
        migrations.CreateModel(
            name='Detail_trainings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_name', models.CharField(max_length=100, verbose_name='Название курса')),
                ('description_title_name', models.TextField(verbose_name='описание курса')),
                ('format_trainings', models.CharField(max_length=250, verbose_name='формат тренинга')),
                ('count_lesson', models.CharField(blank=True, max_length=100, verbose_name='сколько материала')),
                ('time', models.CharField(blank=True, max_length=20, verbose_name='длительность курса')),
                ('video', models.FileField(blank=True, upload_to='uploads/%Y/%m/%d/', verbose_name='видео')),
                ('about_course', models.TextField(blank=True, verbose_name='о курсе описание курса')),
                ('about_course2', models.TextField(blank=True, verbose_name='о курсе описание курса2')),
                ('about_course3', models.TextField(blank=True, verbose_name='о курсе описание курса3')),
                ('for_who', models.TextField(blank=True, verbose_name='для кого это')),
                ('for_who2', models.TextField(blank=True, verbose_name='для кого это2')),
                ('for_who3', models.TextField(blank=True, verbose_name='для кого это3')),
                ('will_know', models.TextField(blank=True, verbose_name='Вы узнаете')),
                ('will_know2', models.TextField(blank=True, verbose_name='Вы узнаете')),
                ('will_know3', models.TextField(blank=True, verbose_name='Вы узнаете')),
                ('result_you', models.TextField(blank=True, verbose_name='в результате вы')),
                ('result_you2', models.TextField(blank=True, verbose_name='в результате вы2')),
                ('result_you3', models.TextField(blank=True, verbose_name='в результате вы3')),
                ('result_you4', models.TextField(blank=True, verbose_name='в результате вы4')),
                ('result_you5', models.TextField(blank=True, verbose_name='в результате вы5')),
                ('block_question', models.CharField(max_length=250, verbose_name='первый блок вопрос')),
                ('data_block1', models.CharField(blank=True, max_length=100, verbose_name='время первого блока')),
                ('description_block1', models.TextField(verbose_name='ответ первого блока1')),
                ('description_block2', models.TextField(verbose_name='ответ первого блока2')),
                ('description_block3', models.TextField(verbose_name='ответ первого блока3')),
                ('description_block4', models.TextField(verbose_name='ответ первого блока4')),
                ('description_block5', models.TextField(verbose_name='ответ первого блока5')),
                ('block_question2', models.CharField(max_length=250, verbose_name='второй блок вопрос')),
                ('data_block2', models.CharField(blank=True, max_length=100, verbose_name='время второго блока')),
                ('description_block21', models.TextField(verbose_name='ответ второго блока21')),
                ('description_block22', models.TextField(verbose_name='ответ второго блока22')),
                ('description_block23', models.TextField(verbose_name='ответ второго блока23')),
                ('description_block24', models.TextField(verbose_name='ответ второго блока24')),
                ('description_block25', models.TextField(verbose_name='ответ второго блока25')),
                ('block_question3', models.CharField(max_length=250, verbose_name='третий блок вопрос')),
                ('data_block3', models.CharField(blank=True, max_length=100, verbose_name='время третьего блока')),
                ('description_block31', models.TextField(verbose_name='ответ третьего блока')),
                ('description_block32', models.TextField(verbose_name='ответ третьего блока2')),
                ('description_block33', models.TextField(verbose_name='ответ третьего блока3')),
                ('description_block34', models.TextField(verbose_name='ответ третьего блока4')),
                ('description_block35', models.TextField(verbose_name='ответ третьего блока5')),
                ('what_give_course1', models.TextField(verbose_name='на курсе вы научитесь ?')),
                ('what_give_course2', models.TextField(verbose_name='на курсе вы научитесь2 ?')),
                ('what_give_course3', models.TextField(verbose_name='на курсе вы научитесь3 ?')),
                ('what_give_course4', models.TextField(verbose_name='на курсе вы научитесь4 ?')),
                ('what_give_course5', models.TextField(verbose_name='на курсе вы научитесь5 ?')),
                ('what_give_course6', models.TextField(verbose_name='на курсе вы научитесь6 ?')),
                ('what_give_course7', models.TextField(verbose_name='на курсе вы научитесь7 ?')),
                ('photo', models.ImageField(upload_to='image/%Y/%m/%d', verbose_name='Изображение')),
                ('name_mentor', models.CharField(max_length=100, verbose_name='имя тренера')),
                ('description_mentor', models.CharField(blank=True, max_length=250, verbose_name='опишите тренера, кейсы')),
                ('description_mentor21', models.TextField(verbose_name='биография тренера')),
                ('description_mentor22', models.TextField(verbose_name='биография тренера')),
                ('description_mentor23', models.TextField(verbose_name='биография тренера')),
                ('description_mentor24', models.TextField(verbose_name='биография тренера')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.category_trainings')),
            ],
        ),
        migrations.CreateModel(
            name='Category_detail_seminar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description_title', models.CharField(max_length=250)),
                ('start_date1', models.CharField(max_length=100)),
                ('in_date2', models.CharField(max_length=100)),
                ('time_date3', models.CharField(max_length=100)),
                ('video', models.FileField(blank=True, upload_to='uploads/%Y/%m/%d/')),
                ('about_seminar1', models.CharField(max_length=100)),
                ('about_seminar2', models.CharField(max_length=250)),
                ('about_seminar_min_text1', models.CharField(max_length=250)),
                ('about_seminar_min_text2', models.CharField(max_length=250)),
                ('about_seminar_min_text3', models.CharField(max_length=250)),
                ('about_seminar_min_text4', models.CharField(max_length=250)),
                ('question_for_payments', models.CharField(max_length=500)),
                ('block_question_1', models.CharField(max_length=100)),
                ('teacher_seminar', models.CharField(max_length=100)),
                ('jobs_teacher', models.CharField(max_length=100)),
                ('description_teacher_text', models.CharField(max_length=100)),
                ('photo', models.ImageField(upload_to='image/%Y/%m/%d', verbose_name='Изображение')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.seminar')),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('payed', models.BooleanField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
